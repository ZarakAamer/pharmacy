# Generated by Django 4.1.3 on 2023-02-22 10:11

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=300, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Advices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='advices')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_en', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_ar', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('advice', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('advice_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('advice_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Advice',
                'verbose_name_plural': 'Advices',
            },
        ),
        migrations.CreateModel(
            name='BigBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='big_banners.jpg', upload_to='big_banners')),
                ('name', models.CharField(default='Skin Care', max_length=50)),
                ('name_en', models.CharField(default='Skin Care', max_length=50, null=True)),
                ('name_ar', models.CharField(default='Skin Care', max_length=50, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('user_catcher', models.CharField(default='Big discount', max_length=50)),
                ('user_catcher_en', models.CharField(default='Big discount', max_length=50, null=True)),
                ('user_catcher_ar', models.CharField(default='Big discount', max_length=50, null=True)),
                ('short_line', models.CharField(default='Save 80 percent on all products flat', max_length=100)),
                ('short_line_en', models.CharField(default='Save 80 percent on all products flat', max_length=100, null=True)),
                ('short_line_ar', models.CharField(default='Save 80 percent on all products flat', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Big Banner',
                'verbose_name_plural': 'Big Banners',
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('paid_status', models.BooleanField(blank=True, default=False, null=True)),
                ('cod', models.BooleanField(blank=True, default=False, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cart Order',
                'verbose_name_plural': 'Cart Orders',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_en', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_ar', models.CharField(blank=True, max_length=300, null=True)),
                ('map_iframe', models.CharField(max_length=2000)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('details_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('details_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='maincategory')),
            ],
            options={
                'verbose_name': 'Main Category',
                'verbose_name_plural': 'Main Categories',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('paid_status', models.BooleanField(blank=True, default=False, null=True)),
                ('cod', models.BooleanField(blank=True, default=False, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('product_status', models.CharField(choices=[('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='processing', max_length=30)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='product.jpg', upload_to='Product Images')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('description_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('old_price', models.PositiveIntegerField(blank=True, null=True)),
                ('specifications', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('specifications_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('specifications_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('stock_count', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='core.category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='SideBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='side_banners.jpg', upload_to='side_banners')),
                ('type', models.CharField(default='organic', max_length=50)),
                ('type_en', models.CharField(default='organic', max_length=50, null=True)),
                ('type_ar', models.CharField(default='organic', max_length=50, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('user_catcher', models.CharField(default='discounts no all products', max_length=50)),
                ('user_catcher_en', models.CharField(default='discounts no all products', max_length=50, null=True)),
                ('user_catcher_ar', models.CharField(default='discounts no all products', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Side Banner',
                'verbose_name_plural': 'Side Banners',
            },
        ),
        migrations.CreateModel(
            name='wishlist_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Whishlist',
                'verbose_name_plural': 'Whishlists',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='subcategory')),
                ('main_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcats', to='core.maincategory')),
            ],
            options={
                'verbose_name': 'Sub Category',
                'verbose_name_plural': 'Sub Categories',
            },
        ),
        migrations.CreateModel(
            name='SpecialTimeOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('life', models.PositiveIntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
            options={
                'verbose_name': 'Special Time Offer',
                'verbose_name_plural': 'Special Time Offers',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(default='product.jpg', upload_to='product-images')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_images', to='core.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='Prescribtion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('subject_en', models.CharField(max_length=200, null=True)),
                ('subject_ar', models.CharField(max_length=200, null=True)),
                ('details', models.TextField()),
                ('details_en', models.TextField(null=True)),
                ('details_ar', models.TextField(null=True)),
                ('prescribtion', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('prescribtion_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('prescribtion_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescrbtions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescrbtion',
                'verbose_name_plural': 'Prescrbtions',
            },
        ),
        migrations.CreateModel(
            name='OrderProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=200)),
                ('qty', models.IntegerField(default=0)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='core.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='in_order_products', to='core.product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='sub_cat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='core.subcategory'),
        ),
        migrations.CreateModel(
            name='CartOrderProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=200)),
                ('qty', models.IntegerField(default=0)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='core.cartorder')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='in_cart_products', to='core.product')),
            ],
            options={
                'verbose_name': 'Cart Order Item',
                'verbose_name_plural': 'Cart Order Items',
            },
        ),
    ]
